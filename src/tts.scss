$shadow: 0.3rem 0.3rem 0.6rem var(--top-left-shadow),
  -0.2rem -0.2rem 0.5rem var(--bottom-right-shadow);
$inner-shadow: inset 0.2rem 0.2rem 0.5rem var(--top-left-shadow),
  inset -0.2rem -0.2rem 0.5rem var(--bottom-right-shadow);

// :root {
//   --primary-light: #e4ebf5;
//   --primary-dark: #555555;
//   --top-left-shadow: #c8d0e7;
//   --bottom-right-shadow: #ffffff;

//   --background-color: var(--primary-light);
//   --text-color: #000000;
// }

.tts-container {
  margin-top: 1rem;
  display: flex;
  flex-direction: column;
  align-items: center;

  .tts-input textarea {
    width: 18rem;
    min-width: 10rem;
    max-width: 30rem;
    min-height: 5rem;
    border: none;
    border-radius: 1rem;
    font-size: 1.4rem;
    padding: 1rem;
    box-shadow: $inner-shadow;
    background: none;
    font-family: inherit;
    color: var(--greyDark);

    &::placeholder {
      color: var(--greyLight-3);
    }
    &:focus {
      outline: none;
      box-shadow: $shadow;
    }
  }

  .tts-options {
    display: flex;
    justify-content: space-between;
    align-items: center;

    $navItemWidth: 18rem;
    $navItemHeight: 3rem;
    $numOfColumns: 3;
    $numOfRows: 2;

    $navItemWidth: 18rem;
    $navItemHeight: 3rem;
    $numOfColumns: 3;
    $numOfRows: 2;

    .voice-control {
      margin: 1rem auto;
      padding: 0.3rem;
      width: $navItemWidth;
      height: calc($navItemHeight * $numOfRows);
      box-shadow: $shadow;
      border-radius: 1rem;
      display: grid;
      grid-template-columns: repeat($numOfColumns, 1fr);
      grid-template-rows: repeat($numOfRows, 1fr);
      gap: 0.3rem;
      position: relative;

      input {
        display: none;
      }

      label {
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        font-size: 1.2rem;
        font-weight: bold;
        color: var(--text-color);
        transition: all 0.3s ease;
        border-radius: 1rem;

        &:hover {
          background: var(--primary-light);
        }
      }

      &_color {
        position: absolute;
        height: $navItemHeight; //calc($navItemHeight - 0.0rem);
        width: calc($navItemWidth / $numOfColumns - 0.2rem);
        border-radius: 0.7rem;
        box-shadow: $inner-shadow;
        background: transparent;
        pointer-events: none;
        transform: translate(
          calc((0) * ($navItemWidth / $numOfColumns + 0.3rem) + 0.3rem),
          0.3rem
        );
        transition: transform 0.3s ease-in-out;
      }
    }

    #voice-1:checked ~ .voice-control_color {
      transform: translate(
        calc((0) * ($navItemWidth / $numOfColumns + 0.3rem) + 0.3rem),
        0.3rem
      );
    }

    #voice-2:checked ~ .voice-control_color {
      transform: translate(
        calc((1) * ($navItemWidth / $numOfColumns + 0.3rem)),
        0.3rem
      );
    }

    #voice-3:checked ~ .voice-control_color {
      transform: translate(
        calc((2) * ($navItemWidth / $numOfColumns + 0.3rem) - 0.1rem),
        0.3rem
      );
    }

    #voice-4:checked ~ .voice-control_color {
      transform: translate(
        calc((0) * ($navItemWidth / $numOfColumns + 0.3rem) + 0.3rem),
        calc($navItemHeight + 0.3rem)
      );
    }

    #voice-5:checked ~ .voice-control_color {
      transform: translate(
        calc((1) * ($navItemWidth / $numOfColumns + 0.3rem)),
        calc($navItemHeight + 0.3rem)
      );
    }

    #voice-6:checked ~ .voice-control_color {
      transform: translate(
        calc((2) * ($navItemWidth / $numOfColumns + 0.3rem) - 0.1rem),
        calc($navItemHeight + 0.3rem)
      );
    }
  }

  .tts-controls {
    display: flex;

    font-size: 16px;

    .button {
      display: inline-flex;
      justify-content: center;
      align-items: center;
      box-shadow: $shadow;
      padding: 1rem;
      border-radius: 1rem;
      width: 30px;
      height: 30px;
      margin: 0 1rem;

      &:active {
        box-shadow: $inner-shadow;
      }

      svg {
        fill: var(--text-color);
      }
    }

    .download-button {
      display: inline-flex;
      justify-content: center;
      align-items: center;

      svg {
        width: 120%;
        height: 120%;
      }

      &.disabled {
        pointer-events: none;
        opacity: 0.5;
        cursor: not-allowed;
        box-shadow: $inner-shadow;
      }
    }

    .tts-play-button.loading {
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .spinner {
      width: 20px;
      height: 20px;
      border: 3px solid rgba(0, 0, 0, 0);
      border-top: 3px solid #000;
      border-radius: 50%;
      animation: spin 0.6s linear infinite;
    }

    @keyframes spin {
      from {
        transform: rotate(0deg);
      }
      to {
        transform: rotate(360deg);
      }
    }
  }
}
